name: Deploy app
run-name: Deploy (${{ github.event.inputs.env }}) # shows env in the run title

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:

jobs:    
  deploy-backend:
    name: Deploy Backend â€“ "${{ github.ref_name }}"
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Pick env
        run: |
          if [ "${{ github.ref_name }}" = "staging" ]; then
            echo "SUPABASE_PROJECT_ID=${{ secrets.STAGING_PROJECT_ID }}"   >> $GITHUB_ENV
            echo "SUPABASE_DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" = "main" ]; then
            echo "SUPABASE_PROJECT_ID=${{ secrets.DOGFOOD_PROJECT_ID }}"   >> $GITHUB_ENV
            echo "SUPABASE_DB_PASSWORD=${{ secrets.DOGFOOD_DB_PASSWORD }}" >> $GITHUB_ENV
          else
            echo "Invalid branch: ${{ github.ref_name }}. Only 'staging' and 'main' branches are supported."
            exit 1
          fi
      - uses: supabase/setup-cli@v1
        with: { version: latest }
      - run: supabase db start
      - run: supabase db lint
      - run: supabase test db

      - name: Verify generated types are checked in
        run: |
          supabase gen types typescript --local > types.gen.ts
          if ! git diff --ignore-space-at-eol --exit-code --quiet types.gen.ts; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi
      - run: supabase link --project-ref "$SUPABASE_PROJECT_ID"
      - run: supabase db push --include-all
      - run: supabase functions deploy

  
     